"""
Interfaces y protocolos para la capa de aplicaciÃ³n del ETL
"""
from typing import Protocol, List, Dict, Any
from pathlib import Path
from etl_domain import CourseMetadata, Course

class PDFExtractor(Protocol):
    def extract_text(self, filepath: Path) -> List[str]: ...
    def extract_tables(self, filepath: Path) -> Dict[str, List[List[str]]]: ...

class SyllabusParser(Protocol):
    def parse_metadata(self, filename: str) -> CourseMetadata: ...
    def parse_content(self, text: List[str], tables: Dict) -> Dict[str, Any]: ...

class Repository(Protocol):
    def save(self, course: Course) -> None: ...
    def find_by_id(self, course_id: str) -> Course | None: ...
    def find_by_period(self, period: str) -> List[Course]: ...
